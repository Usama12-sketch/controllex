import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'

import Query from '@/components/Data-Emails/Query'
import prisma from '../../lib/prisma'
import { authOptions } from '../api/auth/[...nextauth]'
import GetPost from '../../components/GetPost'
import { SafeJson } from '../../lib/formatHelpers'
import { getSession, useSession } from 'next-auth/react'
import { useRouter } from 'next/router'



const inter = Inter({ subsets: ['latin'] })

export default function Home({post, Blocks, Admins, beta}) {
    const url = "/api/CUD/Draft"
    const urlA = "/api/CUD/Blog"

    const session = useSession()
    const router = useRouter()
    if(session.status === 'unauthenticated'){
router.replace('/Blog')
    }
   else if(session.status === 'authenticated'){

      return (
        <>
      <Head>
        <title>Drafts</title>
        
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
    <div>
      </div>    
     
      
    <h1>
      </h1>  
    
      {/* <Query Post={post.draft} data={post}/> */}
      <GetPost url={url} url2={urlA} posts={beta} Blocks={Blocks} Admins={Admins}/>
              </main>
    </>
  )
}
}

export const getServerSideProps = async ({req}) =>{
  const session = await getSession({req, authOptions})
  let beta = await prisma.draft.findMany({
    include:{
        user: true,
    }
  })
 let  data = await  prisma.user.findUnique({
  where:{
    email: session.user.email
  },
include:{
  draft: true,
}
 })

 
 let Blocks = await prisma.blocs.findMany()
 let Admins = await prisma.admins.findMany()
 
 Blocks = SafeJson(Blocks)
 Admins = SafeJson(Admins)
 beta = SafeJson(beta)

 
 const serializedData = JSON.stringify(data);
 const safeData = JSON.parse(serializedData);   
 console.log(safeData)
 return{ props: {
   post: safeData, Blocks, Admins, beta
  }}
  }